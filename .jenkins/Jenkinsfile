import org.rookout.files.Utilities
import org.rookout.testsUtil.TestUtilities

def label = "worker-${UUID.randomUUID().toString()}"
def testsNames = null

podCreator.initMain(label: label) {
    node(label) {
        print(pwd())
        container('rookout-helm') {
            def myRepo = checkout scm
            env.GIT_BRANCH = myRepo.GIT_BRANCH.replaceAll('/|_', '-')
            // Replacing characters we cannot support in deploy branch
            def testFolder = "master".equals(env.GIT_BRANCH) ? "regression-test" : "sandbox-regression-test"
            stage('Getting test') {
                print(pwd())
                def testsNamesRaw = Utilities.getAllDirThatMatchFile(this, '.', 'Jenkinsfile')
                testsNames = testsNamesRaw.values().toList()
                println(testsNames)
            }

            def scriptToUse = libraryResource 'generate_tests.groovy'
            for (int i = 0; i < testsNames.size(); i++) {
                def dirPath = "${testsNames[i]}".toString()
                def jobName = "${testsNames[i]}".toString().replace("/","-")
                def dockerTag = TestUtilities.getDockerTagNameForRegression(testFolder, jobName)
                withCredentials([
                        string(credentialsId: 'ROOKOUT_REGGRESION_TOKEN', variable: 'ROOKOUT_TOKEN'),
                        string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                        string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    if(Utilities.checkIfFileExist(this, dirPath, "Dockerfile.test")){
                        dockerfile = "Dockerfile.test"
                    }
                    else{
                        dockerfile = "Dockerfile"
                    }
                    podCreator.initKaniko(branch: env.ORIGINAL_GIT_BRANCH,
                                                        repo: env.REPO_NAME, 
                                                        imageName: "${testFolder}-${jobName}",
                                                        imageRepo: "us-central1-docker.pkg.dev/rookoutdevelopment/development-images",
                                                        imageTag: "latest",
                                                        dockerfile: dockerfile, 
                                                        envVars: ["${ROOKOUT_TOKEN}","${AWS_ACCESS_KEY_ID}","${AWS_SECRET_ACCESS_KEY}"],
                                                        argsMap: ["ROOKOUT_TOKEN":ROOKOUT_TOKEN,"AWS_ACCESS_KEY_ID":AWS_ACCESS_KEY_ID,"AWS_SECRET_ACCESS_KEY":AWS_SECRET_ACCESS_KEY]
                                                        subPath: dirPath)
                }
                TestUtilities.createTest(this, scriptToUse, jobName, pwd() + "/${testsNames[i]}", "Jenkinsfile", testFolder)
            }

            if ("master".equals(env.GIT_BRANCH)) {
                stage('Run python tests') {
                    triggerer.regressionEx(GIT_BRANCH: "master", GIT_REPO: "PythonRook", LANGUAGE_TO_RUN: "python") {

                    }
                }
                stage('Run node tests') {
                    triggerer.regressionEx(GIT_BRANCH: "master", GIT_REPO: "NodeRook", LANGUAGE_TO_RUN: "node") {

                    }
                }
                stage('Run java tests') {
                    triggerer.regressionEx(GIT_BRANCH: "master", GIT_REPO: "JavaRook", LANGUAGE_TO_RUN: "java") {

                    }
                }
            }
        }
    }
}

