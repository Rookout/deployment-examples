Description: >
  This template deploys a Controller\Datastore ECS tasks exposed trough NLB \ Service Discovery or Via Public IP directly and VPC.

Parameters:

  TemplatesS3Bucket:
    Type: String
    Description: Bucket name where all templates are stored

  ControllerPublishLB:
    Description: Set true if you want to publish Controller service trough LoadBalancer. CreateLB parameter should be set to true.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.
  
  DatastorePublishLB:
    Description: Set true if you want to publish Datastore service trough LoadBalancer. CreateLB parameter should be set to true.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.
  
  ControllerServerMode:
    Description: Server mode for Controller service. CertificateS3Bucket and CertificateS3BucketPrefix will be used to download certificates in case of TLS mode.
    Type: String
    Default: "PLAIN"
    AllowedValues:
      - "PLAIN"
      - "TLS"
  
  DatastoreServerMode:
    Description: Server mode for Datastore service. CertificateS3Bucket and CertificateS3BucketPrefix will be used to download certificates in case of TLS mode.
    Type: String
    Default: "PLAIN"
    AllowedValues:
      - "PLAIN"
      - "TLS"

  ControllerCertArn:
    Type: String
    Default: ""
    Description: ACM Certificate Arn for TLS deployment of Controller service with LoadBalancer.
  
  DatastoreCertArn:
    Type: String
    Default: ""
    Description: ACM Certificate Arn for TLS deployment of datastore service with LoadBalancer.

  CertificateS3Bucket: 
    Type: String
    Default: ""
    Description: S3 bucket name where certificate files will be stored and downloaded by container task to datastore contaner volume. Automatically set datastore ROOKOUT_DOP_SERVER_MODE variable to TLS
  
  ControllerCertS3BucketPrefix:
    Type: String
    Default: ""
    Description: S3 bucket prefix (path in the bucket) where certificate files will be stored and downloaded by container task to datastore contaner volume. Can be optionally set along with CertificateS3Bucket.
  
  DatastoreCertS3BucketPrefix:
    Type: String
    Default: ""
    Description: S3 bucket prefix (path in the bucket) where certificate files will be stored and downloaded by container task to datastore contaner volume. Can be optionally set along with CertificateS3Bucket.
    
  PrivateDNSZoneName:
    Description: Name for private AWS Cloud Map Namespaces.
    Type: String
    Default: cluster.local
    AllowedPattern: "^[!-~]{1,1024}$"
    ConstraintDescription: Must specify a string for zone name, eg. example.local

  DefaultVPC:
    Description: Set true if you want to use default VPC or VPC without private networks.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.

  PublishControllerLB:
    Description: Set true if you want to make Controller available trough LoadBalancer. CreateLB parameter should be set to true.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.

  CreateLB:
    Description: Set true if you want to use LoadBalancer for chosen deployment.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must specify true or false.

  Environment:
    Description: Deployment type. Set true if you want to use LoadBalancer for chosen deployment.
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
      - stage

  TokenSecretArn:
    Description: Secret's ARN for AWS Secrets Manager secret with rookout token.
    Type: String
    Default: rookout_token

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.10.0.0/20

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.10.0.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.10.1.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.10.2.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.10.3.0/24

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Parameters
        Parameters:
          - Environment
      - Label:
          default: Rookout Parameters
        Parameters:
          - CreateLB
          - ExistingLBArn
          - TokenSecretArn
          - DefaultVPC
          - PrivateDNSZoneName
          - ControllerPublishLB
          - DatastorePublishLB
          - DeployController
          - DeployDatastore
          - DatastoreCertArn
          - ControllerCertArn
          - CertificateS3Bucket
          - ControllerCertS3BucketPrefix
          - DatastoreCertS3BucketPrefix

      - Label:
          default: VPC Details
        Parameters:
          - VpcCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR

Conditions:
  CreateLB: !Equals [true, !Ref CreateLB]

Resources:

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesS3Bucket}/${AWS::StackName}/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: !Ref VpcCIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR

  RookoutECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesS3Bucket}/${AWS::StackName}/rookout-aws-ecs.yaml
      Parameters:
        Environment: !Ref Environment
        CreateLB: !Ref CreateLB
        VpcId: !GetAtt VPC.Outputs.VPC
        DefaultVPC: !Ref DefaultVPC
        PublicSubnets: !GetAtt VPC.Outputs.PublicSubnets
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        TokenSecretArn: !Ref TokenSecretArn
        PrivateDNSZoneName: !Ref PrivateDNSZoneName
        ControllerPublishLB: !Ref ControllerPublishLB
        DatastorePublishLB: !Ref DatastorePublishLB
        ControllerCertArn: !Ref ControllerCertArn
        DatastoreCertArn: !Ref DatastoreCertArn
        CertificateS3Bucket: !Ref CertificateS3Bucket
        ControllerCertS3BucketPrefix: !Ref ControllerCertS3BucketPrefix
        DatastoreCertS3BucketPrefix: !Ref DatastoreCertS3BucketPrefix
        ControllerServerMode: !Ref ControllerServerMode
        DatastoreServerMode: !Ref DatastoreServerMode

Outputs:

  AlbDNSName:
    Condition: CreateLB
    Value: !GetAtt RookoutECS.Outputs.AlbDNSName